0. 从很小的例子，比如文本的高度要利用GetTextMetrics()函数获取，而不是写死，这样
就增加了程序的健壮性
1. GetTextMetrics();
2. 不了解
3. TEXTMETRIC结构的值的单位取决于设备环境中当前选定的映射模式，默认的映射模式是MM_TEXT,
所以是以像素为单位的
4. WM_CREATE消息

0. 
LRESULT CALLBACK WndProc(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam)
{
	HDC hdc;
	PAINTSTRUCT ps;
	RECT rect;
	TEXTMETRIC tm;
	static int cxChar, cyChar;
	int textX = 0;
	int textY = 0;


	switch (message)
	{
	case WM_CREATE:
		hdc = GetDC(hwnd);
		GetTextMetrics(hdc, &tm);
		cxChar = tm.tmAveCharWidth;
		cyChar = tm.tmHeight + tm.tmExternalLeading;
		ReleaseDC(hwnd, hdc);
		return 0;

	case WM_PAINT:
		hdc = BeginPaint(hwnd, &ps);
		GetClientRect(hwnd, &rect);
		textX = (rect.right - rect.left) / 2;
		textY = (rect.bottom - rect.top - cyChar * 10) / 2;

		for (int i = 1; i <= N; ++i) {
			textY += cyChar;
			int textTmpX = textX;
			textTmpX -= cxChar * (0.5 + i);
			TCHAR szBuffer[128] = TEXT("");
			size_t iTarget = 0;
			for (int j = 0; j < 2 * i - 1; ++j) {
				StringCchCat(szBuffer, 128, TEXT("x"));
			}
			StringCchLength(szBuffer, 128, &iTarget);
			TextOut(hdc, textTmpX, textY, szBuffer, iTarget);
		}

		EndPaint(hwnd, &ps);
		return 0;

	case WM_DESTROY:
		PostQuitMessage(0);
		return 0;
	}

	return DefWindowProc(hwnd, message, wParam, lParam);
}

1.
LRESULT CALLBACK WndProc(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam)
{
	HDC hdc;
	PAINTSTRUCT ps;
	RECT rect;
	static int cxChar, cyChar;
	TEXTMETRIC tm;

	switch (message)
	{
	case WM_CREATE:
		hdc = GetDC(hwnd);
		GetTextMetrics(hdc, &tm);
		cxChar = tm.tmAveCharWidth;
		cyChar = tm.tmHeight + tm.tmExternalLeading;
		ReleaseDC(hwnd, hdc);
		return 0;

	case WM_PAINT:
		hdc = BeginPaint(hwnd, &ps);
		GetClientRect(hwnd, &rect);
		// 安全输出标题
		TCHAR textHeader[128] = TEXT("九九乘法表");
		size_t iHeaderLength = 0;
		int textX = 20;
		int textY = 20;
		StringCchLength(textHeader, 128, &iHeaderLength);
		TextOut(hdc, textX, textY, textHeader, iHeaderLength);
		// 九九乘法
		for (int i = 1; i <= 9; ++i) {
			textY += cyChar;
			int textTmpX = textX;
			TCHAR textItem[128];
			for (int j = 1; j <= i; ++j) {
				size_t iOneLength = 0;
				StringCchPrintf(textItem, 128, TEXT("%d * %d = %d"), i, j, i * j);
				StringCchLength(textItem, 128, &iOneLength);
				TextOut(hdc, textTmpX, textY, textItem, iOneLength);
				textTmpX += iOneLength * cxChar + ONE_BTW_ONE_LENGTH;
				if (textTmpX - ONE_BTW_ONE_LENGTH > rect.right) {
					textTmpX = textX;
					textY += cyChar;
				}
			}
		}
		EndPaint(hwnd, &ps);
		return 0;

	case WM_DESTROY:
		PostQuitMessage(0);
		return 0;
	}

	return DefWindowProc(hwnd, message, wParam, lParam);
}